import ca3
from Crypto.Util.number import long_to_bytes, bytes_to_long
import pdb 

d = 5718057536001697518551047054916228968318764788213146837104247737475723252876672792814145035566248791142571167080070924097611147609260790285853562602970848027830208479491583339640510463474694129979474226200444745323364980955219771910597654462094853163466054659719534256831817244643904662115276903637905624899

N = 137233380864040740445225129317989495239650354917115524090501945699417358069040147027539480853589970987421708009921702178342667542622258966860485502471300376272511219664942255040061180068836359563951258772159073895770217929153581066916653146805784718623238412965584677847919650184392602680124394803343327621873

e = 3

message1 = b'who let the dogs out?'

message2 = b'who indeed, my dear friend.'

sig1 = pow(bytes_to_long(message1),d,N)
sig2 = pow(bytes_to_long(message2),d,N)

print("Testing RSA modulus recovery from known signatures + corresponding messages")
recovered_modulus = ca3.recover_rsa_modulus_from_signatures(message1,long_to_bytes(sig1),message2,long_to_bytes(sig2), e=3)

assert(recovered_modulus == N)
